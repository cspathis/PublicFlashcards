#GRAMMAR 1
#TOPLEFT JavaScript: The Good Parts
#TOPRIGHT 2
#NUMBERS true

* Whitespace is ...
... not significant.

* What is the comment syntax?
* What's the catch?
As in Java, in-line `//` and multiline `/* ... */`.

Unfortunately, the multiline delimiters can appear in string literals, making commenting out arbitrary blocks of codes unreliable.

* What's strange about JavaScript's numerical types?
There are no integers, or floating point of any size other than 64-bits.
There are no characters either.

* Create an exponential literal.
`xey` is the same as `x * pow(10, e)`.

* Descript the string syntax.
* How are they encoded?
As in Python, single or double quote delimiters can be used.

16-bit fixed Unicode is used.

* Concatenate two strings.
Use `+`.

* What does the `<script>` tag do?
* How do they relate to one another?
The browser executes the compilation unit referred to in the tag right away.

They share a global namespace.

* Give the conditional syntax.
`
if (boolean-expr) then {
  ...
}
else {
  ...
}
`

It results in a value.

* Conditionals accept what kind of values as "false"?
`false`, `null`, `undefined`, empty string, `0`, `NaN`

* Give the `do-while` syntax.
`
do {
  ...
}
while (boolean-expr);
`
