#GRAMMAR 1
#TOPLEFT Learn You a Haskell
#TOPRIGHT 2
#NUMBERS true

* What has the highest association precedence?
Function application.

* What does ' mean in Haskell?
Nothing in particular. It's a legal identifier character often used at the end of an identifier to indicate a strictly evaluated function or a slightly modified function.

* What is a function with no parameters called?
A ``definition``, or a ``name``.

* Give the cons syntax.
`el : list`

* How do you index a list?
`list !! index`

* What is `null`?
A method for checking if a list is empty.

It should be preferred over:
`
list == []
`

* Unlike in Scala, lists of an ordinal type can be ...
... compared with ordering operators like `<` and `>`.

* Check for membership in a list.
`
elem el list
`

However, it's usually called in infix form.

* How can you make a list range in decreasing order?
The step must be given explicitly:
`
[20, 19..1]
`

* Why should floating point numbers generally not be used in ranges?
Results are unintuitive, e.g., exceeding the "upper bound".

* Name three ways to create infinite lists.
- Ranges with no upper bound, or with no lower bound.
- `cycle list`
- `repeat el`

* What's the finite version of `repeat`?
`
replicate num el
`

* `fst` and `snd` only work on ...
... 2-tuples.
