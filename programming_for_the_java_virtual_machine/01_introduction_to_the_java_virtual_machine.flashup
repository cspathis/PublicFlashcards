#GRAMMAR 1
#TOPLEFT Programming for the JVM
#TOPRIGHT 1
#NUMBERS true

* What is defined in the JVM specification?
- The ISA ("bytecodes")
- The class file format
- The algorithm used for verifying class files

* What is the term "class file format" misleading?
JVM bytecode does not to be stored in a file. It can come from other sources, like a networked host or a database.

* What are the JVM's four data spaces?
- Class area (code + constants)
- Java stack
- Heap
- Native method stacks

* What goes into a class?
- Superclass
- Interfaces
- Fields
- Methods
- Constants

* Once a class has been loaded ...
... it cannot be changed in any way.

* Each field and field is associated with what?
- A descriptor which indicates the kinds of values the field can hold, or the parameter and return types of a method.
- A list of modifiers.

* What goes in the stack frame?
- An operand stack.
- An array of local variables.
- A program counter pointing at some instruction in the method implementation.

* When is an object protected from garbage collection?
- If it is specially designated by the JVM for implementation purposes.
- If there is a stack reference to the object.
- If there is a reference to the object in a static field.
- If there is a reference to the object in a field of a protected object.

* What happens to an object whose finalize method stores `this` somewhere protectedfrom the garbage collector?
The object will not be garbage collected.

However, finalize will ```not``` be run again if the object again becomes eligible for garbage collection.
