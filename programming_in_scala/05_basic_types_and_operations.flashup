#GRAMMAR 1
#TOPLEFT Programming in Scala
#TOPRIGHT 5

* What is the orientation of grouping within a precedence level?
It reads left-to-right, or right-to-left if ending in `:`.

* What does operator notation require?
* How is multi-arg calling done?
It requires a receiving object, e.g.
`Console println 10`
```not``` `println 10`

Multi-arg calling is done with parens:
`s indexOf ('0',5)`

* What are the available prefix operators?
+, -, !, ~

You can prepend unary_ to any of the four.

* Describe Symbol literals.
- `'cymbal` is expanded to `Symbol("cymbal")`.
- They must be alphanumeric.
- Values are interned. Symbol literal twice will refer to the exact same symbol object.

* What does unary + do on numeric types?
Absolutely nothing.

* What are postfix operators?
They are just methods that take no arguments when called without a dot or parens.

* Correct the spacing of multiline triple-quoted strings.
`
println("""| Some really long
           | string""".stripMargin)
`

* What is the order of operand evaluation?
It's always left-to-right, regardless of associativity.

* What is short-circuiting accomplished with?
By-name parameters.

* Give the  method precedence table.
Method precedence is done by the first letter of the method name. Assignment operators are done by the last letter (ending in =).

`
 * / %
 + -
 :
 = !
 < >
 &
 ^
 |
 (all letters)
 (all assignment operators)
`
